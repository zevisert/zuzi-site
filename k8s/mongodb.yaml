# yaml-language-server: $schema=../schemas/mongodb-kubernetes-operator/master/mongodbcommunity.mongodbcommunity.mongodb.com-v1.json
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: mongodb
spec:
  members: 2
  arbiters: 1
  type: ReplicaSet
  version: "5.0.3"
  security:
    authentication:
      modes:
        - SCRAM
  users:
    - name: koa
      db: admin
      passwordSecretRef:
        name: env
        key: MONGO_PW
      roles:
        - name: clusterAdmin
          db: admin
        - name: dbAdminAnyDatabase
          db: admin
        - name: dbOwner
          db: admin
        - name: readWriteAnyDatabase
          db: admin
      scramCredentialsSecretName: mongodb-scram
  statefulSet:
    spec:
      template:
        metadata:
          labels:
            environment: production
        spec:
          affinity:
            podAntiAffinity:
              # read: A pod should not be scheduled on the node if a pod with
              # the label environment=production is already running on it.
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: environment
                          operator: In
                          values:
                            - production
                    topologyKey: kubernetes.io/hostname
          containers:
            - name: mongod
              resources:
                limits:
                  cpu: 600m
                  memory: 500M
                requests:
                  cpu: 200m
                  memory: 200M
            - name: mongodb-agent
              resources:
                limits:
                  cpu: 500m
                  memory: 250M
                requests:
                  cpu: 100m
                  memory: 100M
---
# These resources are from the mongodb-kubernetes-operator repository
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-database
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - patch
      - delete
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb-database
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-database
subjects:
  - kind: ServiceAccount
    name: mongodb-database
roleRef:
  kind: Role
  name: mongodb-database
  apiGroup: rbac.authorization.k8s.io
